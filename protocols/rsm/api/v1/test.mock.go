// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vpascoalr/atomix/protocols/rsm/api/v1 (interfaces: TestServer)

// Package v1 is a generated GoMock package.
package v1

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTestServer is a mock of TestServer interface.
type MockTestServer struct {
	ctrl     *gomock.Controller
	recorder *MockTestServerMockRecorder
}

// MockTestServerMockRecorder is the mock recorder for MockTestServer.
type MockTestServerMockRecorder struct {
	mock *MockTestServer
}

// NewMockTestServer creates a new mock instance.
func NewMockTestServer(ctrl *gomock.Controller) *MockTestServer {
	mock := &MockTestServer{ctrl: ctrl}
	mock.recorder = &MockTestServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTestServer) EXPECT() *MockTestServerMockRecorder {
	return m.recorder
}

// TestPropose mocks base method.
func (m *MockTestServer) TestPropose(arg0 context.Context, arg1 *TestProposalRequest) (*TestProposalResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TestPropose", arg0, arg1)
	ret0, _ := ret[0].(*TestProposalResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TestPropose indicates an expected call of TestPropose.
func (mr *MockTestServerMockRecorder) TestPropose(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TestPropose", reflect.TypeOf((*MockTestServer)(nil).TestPropose), arg0, arg1)
}

// TestQuery mocks base method.
func (m *MockTestServer) TestQuery(arg0 context.Context, arg1 *TestQueryRequest) (*TestQueryResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TestQuery", arg0, arg1)
	ret0, _ := ret[0].(*TestQueryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TestQuery indicates an expected call of TestQuery.
func (mr *MockTestServerMockRecorder) TestQuery(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TestQuery", reflect.TypeOf((*MockTestServer)(nil).TestQuery), arg0, arg1)
}

// TestStreamPropose mocks base method.
func (m *MockTestServer) TestStreamPropose(arg0 *TestProposalRequest, arg1 Test_TestStreamProposeServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TestStreamPropose", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// TestStreamPropose indicates an expected call of TestStreamPropose.
func (mr *MockTestServerMockRecorder) TestStreamPropose(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TestStreamPropose", reflect.TypeOf((*MockTestServer)(nil).TestStreamPropose), arg0, arg1)
}

// TestStreamQuery mocks base method.
func (m *MockTestServer) TestStreamQuery(arg0 *TestQueryRequest, arg1 Test_TestStreamQueryServer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TestStreamQuery", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// TestStreamQuery indicates an expected call of TestStreamQuery.
func (mr *MockTestServerMockRecorder) TestStreamQuery(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TestStreamQuery", reflect.TypeOf((*MockTestServer)(nil).TestStreamQuery), arg0, arg1)
}